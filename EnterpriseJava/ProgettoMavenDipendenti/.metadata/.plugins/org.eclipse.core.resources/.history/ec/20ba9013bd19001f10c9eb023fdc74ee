package seriea;

import java.net.URI;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;


@RestController
@RequestMapping(path = "/squadre")
public class SquadraController {
    @Autowired
    private SquadraDao squadraDao;
    
    @Autowired
    private GiocatoreDao giocatoreDao;

    // Implementing a GET method to get the list of all the teams
    @GetMapping(path = "/", produces = MediaType.APPLICATION_JSON_VALUE)
    public List<Squadra> getSquadre() {
        return squadraDao.listAll();
    }

    @GetMapping(path = "/{nomeTeam}", produces = MediaType.APPLICATION_JSON_VALUE)
    public List<Giocatore> getGiocatori(@PathVariable ("nomeTeam") String nomeTeam) {
        return giocatoreDao.findBySquadraName(nomeTeam);
    }
   
    
    @PostMapping(path = "/Giocatore", consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Object> addGiocatori(@RequestBody Giocatore giocatore) {

		try {
			giocatoreDao.addGiocatore(giocatore);
			return ResponseEntity.created(null).build();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return ResponseEntity.unprocessableEntity().build();
		}
	}

    @PostMapping(path = "/Squadra", consumes = "application/json", produces = "application/json")
	public ResponseEntity<Object> addSquadra(@RequestBody Squadra squadra) {

		int id = squadraDao.listAll().size() + 1;
		squadra.setId(id);
		squadraDao.addSquadra(squadra);

		URI location = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(squadra.getId())
				.toUri();

		return ResponseEntity.created(location).build();
	}
    
    @DeleteMapping(path= "/Giocatore/{id}")
	public void deleteGiocatore(@PathVariable Giocatore giocatore) {
		giocatoreDao.deleteGiocatore(giocatore);
	}
}


